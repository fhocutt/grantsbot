== Overview ==
A mediawiki bot written in Python 2.7 that runs on [http://meta.wikimedia.org meta.wikimedia.org]. The bot currently tracks grant proposals submitted to the [http://meta.wikimedia.org/wiki/Grants:IEG Individual Engagement Grants program]. It interacts with both the [http://mediawiki.org/wiki/API MediaWiki API] and with a back-end MySQL database.

;Scripts
[[manageProposals.py]]: tracks the status of proposals (e.g. when a new proposal has been created, who created it, whether a proposal is in 'draft' or 'proposed' status).

[[messageSubmitters.py]]: sends reminder messages to editors who have submitted a proposal, letting them know when they need to complete their proposal by.

[[pageData.py]]: my first attempt at a useful Python class :) Gets text and metadata about a given page from the MediaWiki API. 

== Dependencies ==
This
;DB tables
These scripts are designed to be used with a Mediawiki MYSQL database*, such as those available at [http://toolserver.org the Wikimedia toolserver]. Creating two custom tables in your own user_database on Toolserver will make it easier to track the pages you want to track.

<nowiki>*</nowiki> although you could probably re-write them to just use the API if you don't have access to a database.

;Tracked pages
This table contains a list of the pages you want the bot to monitor and update. It contains static metadata drawn from the mediawiki database schema's ''page'', ''revision'', and ''categorylinks'' tables, as well as dynamic metadata updated by the bot about the status of the page at a given time.

<nowiki>
+--------------------+------------------+------+-----+---------+----------------+
| Field              | Type             | Null | Key | Default | Extra          |
+--------------------+------------------+------+-----+---------+----------------+
| id                 | int(11) unsigned | NO   | PRI | NULL    | auto_increment |
| page_id            | int(11)          | YES  | UNI | NULL    |                |
| page_title         | varbinary(250)   | YES  |     | NULL    |                |
| p_status           | varbinary(20)    | YES  |     | NULL    |                |
| p_has_sec2         | tinyint(1)       | YES  |     | 0       |                |
| p_has_sec3         | tinyint(1)       | YES  |     | 0       |                |
| p_created_date     | datetime         | YES  |     | NULL    |                |
| p_latest_edit_date | datetime         | YES  |     | NULL    |                |
| p_creator_userid   | int(11)          | YES  |     | NULL    |                |
| pc_username        | varbinary(250)   | YES  |     | NULL    |                |
| pc_talkpage_id     | int(11)          | YES  |     | NULL    |                |
+--------------------+------------------+------+-----+---------+----------------+
11 rows in set (0.01 sec)
</nowiki>

;Edits to tracked pages
This table contains a list of the edits to pages you want the bot to monitor and update. It contains static metadata drawn from the mediawiki database schema's ''page'' and ''revision'' tables. This table is not really necessary, but nice to have around.

<nowiki>
+----------------+------------------+------+-----+---------+----------------+
| Field          | Type             | Null | Key | Default | Extra          |
+----------------+------------------+------+-----+---------+----------------+
| id             | int(11) unsigned | NO   | PRI | NULL    | auto_increment |
| rev_id         | int(11)          | YES  | UNI | NULL    |                |
| rev_user       | int(11)          | YES  |     | NULL    |                |
| rev_user_text  | varbinary(255)   | YES  |     | NULL    |                |
| rev_timestamp  | varbinary(20)    | YES  |     | NULL    |                |
| rev_comment    | varbinary(255)   | YES  |     | NULL    |                |
| page_id        | int(11)          | YES  |     | NULL    |                |
| page_title     | varbinary(255)   | YES  |     | NULL    |                |
| page_namespace | int(11)          | YES  |     | NULL    |                |
+----------------+------------------+------+-----+---------+----------------+
9 rows in set (0.01 sec)
</nowiki>

;Other modules
Users [http://pypi.python.org/pypi/wikitools wikitools 1.1.1] and [http://pypi.python.org/pypi/BeautifulSoup/3.2.1 BeautifulSoup 3.2.1]. See [[requirements.txt]] for pip-readable version info. All other modules should be available through the default Python libraries, I believe.
